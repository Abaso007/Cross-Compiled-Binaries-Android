--- bundled/linux/include/uapi/linux/in.h
+++ bundled/linux/include/uapi/linux/in.h
@@ -84,7 +84,9 @@
 };
 #endif
 
-#if __UAPI_DEF_IN_ADDR
+#ifdef __ANDROID__
+#include <bits/in_addr.h>
+#elif __UAPI_DEF_IN_ADDR
 /* Internet address. */
 struct in_addr {
 	__be32	s_addr;

--- bundled/linux/include/uapi/linux/fs.h
+++ bundled/linux/include/uapi/linux/fs.h
@@ -43,10 +43,6 @@
 #define SEEK_HOLE	4	/* seek to the next hole */
 #define SEEK_MAX	SEEK_HOLE
 
-#define RENAME_NOREPLACE	(1 << 0)	/* Don't overwrite target */
-#define RENAME_EXCHANGE		(1 << 1)	/* Exchange source and dest */
-#define RENAME_WHITEOUT		(1 << 2)	/* Whiteout source */
-
 struct file_clone_range {
 	__s64 src_fd;
 	__u64 src_offset;

--- src/defs.h
+++ src/defs.h
@@ -892,9 +892,6 @@
  * part.
  */
 # define QUOTE_HEXSTR_MASK			(0x3 << QUOTE_HEXSTR_SHIFT)
-static_assert((NUM_HEXSTR_OPTS - 1) <= (QUOTE_HEXSTR_MASK >> QUOTE_HEXSTR_SHIFT),
-	      "xflag options do not fit into QUOTE_HEXSTR_MASK");
-
 # define QUOTE_HEXSTR_NONE			(HEXSTR_NONE << QUOTE_HEXSTR_SHIFT)
 # define QUOTE_HEXSTR_ALL			(HEXSTR_ALL << QUOTE_HEXSTR_SHIFT)
 # define QUOTE_HEXSTR_NON_ASCII			(HEXSTR_NON_ASCII << QUOTE_HEXSTR_SHIFT)

--- src/sigreturn.c
+++ src/sigreturn.c
@@ -15,6 +15,7 @@
 # include <asm/sigcontext.h>
 #endif
 
+#if !(defined(__ANDROID__) && (defined(__arm__) || defined(__aarch64__)))
 /* The following function might be unused, hence the inline qualifier.  */
 static inline void
 print_sigmask_addr_size(const void *const addr, const unsigned int size)
@@ -24,6 +25,7 @@
 	tprints_string(sprintsigmask_n("", addr, size));
 	tprint_struct_end();
 }
+#endif
 
 #define tprintsigmask_addr(mask_) \
 	print_sigmask_addr_size((mask_), sizeof(mask_))
